export const CORS = {
  allowedOrigins: ['http://localhost:3000'],
  methods: ['GET', 'POST', 'DELETE', 'PATCH', 'PUT'],
};

export enum Role {
  SUPERADMIN_ROLE = 'super_admin',
  ADMIN_ROLE = 'admin',
  USER_ROLE = 'user',
}

export enum MedicineType {
  TABLET = 'Tablet',
  SYRUP = 'Syrup',
  INJECTION = 'Injection',
  CAPSULE = 'Capsule',
}

export enum ExpiryDays {
  TODAY = 0,
  TOMORROW = 1,
  ONE_WEEK = 7,
  ONE_MONTH = 30,
  THREE_MONTHS = 90,
}

export const errorCodesWithMsg = {
  DOCERPERROR001: 'FAILED Medicine Service Fn-create',
  DOCERPERROR002: 'FAILED Medicine Service Fn-findAll',
  DOCERPERROR003: 'FAILED Medicine Service Fn-findOne',
  DOCERPERROR004: 'FAILED Medicine Service Fn-update',
  DOCERPERROR005: 'FAILED Medicine Service Fn-remove',
  DOCERPERROR006: 'FAILED MedicinePurchase Service Fn-removeExpiredMedicines',
  DOCERPERROR007: 'FAILED MedicinePurchase Service Fn-startCronJob',
  DOCERPERROR008: 'FAILED MedicinePurchase Service Fn-saveUpdated',
  DOCERPERROR009: 'FAILED Medicine Service Fn-bulkAddMedicinesFromExcel',
  DOCERPERROR010: 'Medicine not found',
  DOCERPERROR011: 'Insufficient Medicine quantity available',
  DOCERPERROR012: 'FAILED User Service Fn-create',
  DOCERPERROR013: 'FAILED User Service Fn-findAll',
  DOCERPERROR014: 'FAILED User Service Fn-findOne',
  DOCERPERROR015: 'FAILED User Service Fn-remove',
  DOCERPERROR016: 'FAILED User Service Fn-update',
  DOCERPERROR017: 'User not found',
  DOCERPERROR018: 'FAILED Auth Service Fn-validateUser',
  DOCERPERROR019: 'Invalid user credentials',
  DOCERPERROR020: 'Insufficient role permission',
  DOCERPERROR021: 'User not authenticated',
  DOCERPERROR022: 'Contact number should not be empty',
  DOCERPERROR023: 'Username must be valid email',
  DOCERPERROR024: 'Password must be string',
  DOCERPERROR025: 'Email must be valid email format',
  DOCERPERROR026: 'Role must be valid enum value',
  DOCERPERROR027: 'Medicine name must be string',
  DOCERPERROR028: 'Medicine formula must be string',
  DOCERPERROR029: 'Medicine company must be string',
  DOCERPERROR030: 'Patient age must be string',
  DOCERPERROR031: 'Medicine power must be string',
  DOCERPERROR032: 'Medicine chemicalName must be string',
  DOCERPERROR033: 'Medicine name must be between 1 and 255 characters',
  DOCERPERROR034: 'Medicine Formula must be between 1 and 255 characters',
  DOCERPERROR035: 'Medicine company must be between 1 and 255 characters',
  DOCERPERROR036: 'Minimum Medicine quantity should be 0',
  DOCERPERROR037: 'Medicine power must be between 1 and 100 characters',
  DOCERPERROR038: 'Medicine chemicalName must be between 1 and 255 characters',
  DOCERPERROR039: 'Medicine Price must be a decimal number',
  DOCERPERROR040: 'Username must be between 1 and 50 characters',
  DOCERPERROR041: 'Password must be between 1 and 255 characters',
  DOCERPERROR042: 'Email address must be between 1 and 100 characters',
  DOCERPERROR043: 'Contact number must be String',
  DOCERPERROR044: 'Role must be between 1 and 50 characters',
  DOCERPERROR045: 'Medicine RackNumber must be string',
  DOCERPERROR046: 'Medicine RackNumber must be between 1 and 100 characters',
  DOCERPERROR047: 'FAILED Medicine Service Fn-findByRackNumber',
  DOCERPERROR048: 'FAILED Medicine Service Fn-validateFilePath',
  DOCERPERROR049: 'Invalid file path type',
  DOCERPERROR050: 'FAILED Medicine Service Fn-validateMedicineData',
  DOCERPERROR051: 'FAILED Medicine Service Fn-saveOrUpdateMedicine',
  DOCERPERROR052: 'FAILED Medicine Service Fn-parseExcelFile',
  DOCERPERROR053: 'User ID must not be empty',
  DOCERPERROR054: 'Medicine ID must not be empty',
  DOCERPERROR055: 'Medicine Quantity must be an integer',
  DOCERPERROR056: 'Unit Price of Medicine must be a string value',
  DOCERPERROR057: 'Total Price of Medicine must be a string value',
  DOCERPERROR058: 'Medicine Quantity must be an integer',
  DOCERPERROR059: 'FAILED MedicinePurchase Service Fn-create',
  DOCERPERROR060: 'FAILED MedicinePurchase Service Fn-findAll',
  DOCERPERROR061: 'Purchase record not found',
  DOCERPERROR062: 'FAILED MedicinePurchase Service Fn-findOne',
  DOCERPERROR063: 'FAILED MedicinePurchase Service Fn-remove',
  DOCERPERROR064: 'FAILED MedicinePurchase Service Fn-update',
  DOCERPERROR065: 'FAILED MedicinePurchase Service Fn-createPurchase',
  DOCERPERROR066: 'FAILED MedicinePurchase Service Fn-getExpiringMedicine',
  DOCERPERROR067: 'The ExpiryDate must be a valid ISO 8601 date string',
  DOCERPERROR068: 'The PurchaseDate must be a valid ISO 8601 date string',
  DOCERPERROR069: 'FAILED User Service Fn-FindOneWithUserName',
  DOCERPERROR070: 'Patient name must be string',
  DOCERPERROR071: 'Patient name must be between 1 and 255 characters',
  DOCERPERROR072: 'Mobile number should not be empty',
  DOCERPERROR073: 'Mobile number must be String',
  DOCERPERROR074: 'Patient address must be string',
  DOCERPERROR075: 'Patient address must be between 1 and 255 characters',
  DOCERPERROR076: 'Patient Email address must be valid email format',
  DOCERPERROR077: 'Patient Email address must be between 1 and 100 characters',
  DOCERPERROR078: 'FAILED Patient Service Fn-create',
  DOCERPERROR079: 'Patient not found',
  DOCERPERROR080: 'FAILED Patient Service Fn-findAll',
  DOCERPERROR081: 'FAILED Patient Service Fn-findOne',
  DOCERPERROR082: 'FAILED Patient Service Fn-remove',
  DOCERPERROR083: 'FAILED Patient Service Fn-update',
  DOCERPERROR084: 'Patient age should not be empty',
  DOCERPERROR085: 'Patients gender should be string',
  DOCERPERROR086: 'Patient gender must be between 1 and 50 characters',
  DOCERPERROR087: 'Rack Id should not be empty',
  DOCERPERROR088: 'FAILED Rack Service Fn-create',
  DOCERPERROR089: 'Rack Record Not Found',
  DOCERPERROR090: 'FAILED Rack Service Fn-findAll',
  DOCERPERROR091: 'FAILED Rack Service Fn-findOne',
  DOCERPERROR092: 'FAILED Rack Service Fn-remove',
  DOCERPERROR093: 'FAILED Rack Service Fn-update',
  DOCERPERROR094: 'FAILED MedicineSell Service Fn-create',
  DOCERPERROR095: 'Sell Record Not Found',
  DOCERPERROR096: 'FAILED MedicineSell Service Fn-findAll',
  DOCERPERROR097: 'FAILED MedicineSell Service Fn-findOne',
  DOCERPERROR098: 'FAILED MedicineSell Service Fn-remove',
  DOCERPERROR099: 'FAILED MedicineSell Service Fn-update',
  DOCERPERROR100: 'Medicine Purchase Id should not be empty',
  DOCERPERROR101: 'Medicine Sell quantity should be integer',
  DOCERPERROR102: 'Minimum Medicine sell quantity should be 0',
  DOCERPERROR103: 'Medicine Sell time must be a valid ISO 8601 date string',
  DOCERPERROR104: 'Patient Id should not be empty',
  DOCERPERROR105: 'Medicine Type must not be empty',
  DOCERPERROR106: 'Medicine Type must be valid enum value',
  DOCERPERROR107: 'Mobile number should be 10 digits in length',
  DOCERPERROR108: 'Referred Doctor Name must be string',
  DOCERPERROR109: 'Referred Doctor Name must be between 1 and 255 characters',
  DOCERPERROR110: 'FAILED Medicine Service Fn-handleFileUploadFromUrl',
  DOCERPERROR111: 'FAILED Medicine Service Fn-processCSVFromUrl',
  DOCERPERROR112: 'FAILED Medicine Service Fn-parseCSVFile',
  DOCERPERROR113: 'FAILED Medicine Service Fn-processExcelFromUrl',
  DOCERPERROR114: 'FAILED Medicine Service Fn-getFileTypeFromUrl',
  DOCERPERROR115: 'Unsupported file type',
  DOCERPERROR116: 'Discount In Percentage must be number',
  DOCERPERROR117: 'Patient DOB must be valid valid ISO 8601 date string',
  DOCERPERROR118: 'Patient DOB must not be empty',
};

export const errorCodes = {
  DOCERPERROR001: 'DOCERPERROR001',
  DOCERPERROR002: 'DOCERPERROR002',
  DOCERPERROR003: 'DOCERPERROR003',
  DOCERPERROR004: 'DOCERPERROR004',
  DOCERPERROR005: 'DOCERPERROR005',
  DOCERPERROR006: 'DOCERPERROR006',
  DOCERPERROR007: 'DOCERPERROR007',
  DOCERPERROR008: 'DOCERPERROR008',
  DOCERPERROR009: 'DOCERPERROR009',
  DOCERPERROR010: 'DOCERPERROR010',
  DOCERPERROR011: 'DOCERPERROR011',
  DOCERPERROR012: 'DOCERPERROR012',
  DOCERPERROR013: 'DOCERPERROR013',
  DOCERPERROR014: 'DOCERPERROR014',
  DOCERPERROR015: 'DOCERPERROR015',
  DOCERPERROR016: 'DOCERPERROR016',
  DOCERPERROR017: 'DOCERPERROR017',
  DOCERPERROR018: 'DOCERPERROR018',
  DOCERPERROR019: 'DOCERPERROR019',
  DOCERPERROR020: 'DOCERPERROR020',
  DOCERPERROR021: 'DOCERPERROR021',
  DOCERPERROR022: 'DOCERPERROR022',
  DOCERPERROR023: 'DOCERPERROR023',
  DOCERPERROR024: 'DOCERPERROR024',
  DOCERPERROR025: 'DOCERPERROR025',
  DOCERPERROR026: 'DOCERPERROR026',
  DOCERPERROR027: 'DOCERPERROR027',
  DOCERPERROR028: 'DOCERPERROR028',
  DOCERPERROR029: 'DOCERPERROR029',
  DOCERPERROR030: 'DOCERPERROR030',
  DOCERPERROR031: 'DOCERPERROR031',
  DOCERPERROR032: 'DOCERPERROR032',
  DOCERPERROR033: 'DOCERPERROR033',
  DOCERPERROR034: 'DOCERPERROR034',
  DOCERPERROR035: 'DOCERPERROR035',
  DOCERPERROR036: 'DOCERPERROR036',
  DOCERPERROR037: 'DOCERPERROR037',
  DOCERPERROR038: 'DOCERPERROR038',
  DOCERPERROR039: 'DOCERPERROR039',
  DOCERPERROR040: 'DOCERPERROR040',
  DOCERPERROR041: 'DOCERPERROR041',
  DOCERPERROR042: 'DOCERPERROR042',
  DOCERPERROR043: 'DOCERPERROR043',
  DOCERPERROR044: 'DOCERPERROR044',
  DOCERPERROR045: 'DOCERPERROR045',
  DOCERPERROR046: 'DOCERPERROR046',
  DOCERPERROR047: 'DOCERPERROR047',
  DOCERPERROR048: 'DOCERPERROR048',
  DOCERPERROR049: 'DOCERPERROR049',
  DOCERPERROR050: 'DOCERPERROR050',
  DOCERPERROR051: 'DOCERPERROR051',
  DOCERPERROR052: 'DOCERPERROR052',
};
