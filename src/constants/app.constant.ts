export const CORS = {
  allowedOrigins: ['http://localhost:3000'],
  methods: ['GET', 'POST', 'DELETE', 'PATCH', 'PUT'],
};

export enum Role {
  SUPERADMIN_ROLE = 'super_admin',
  ADMIN_ROLE = 'admin',
  USER_ROLE = 'user',
}

export const errorCodes = {
  BACKENDERROR001: 'FAILED Medicine Service Fn-create',
  BACKENDERROR002: 'FAILED Medicine Service Fn-findAll',
  BACKENDERROR003: 'FAILED Medicine Service Fn-findOne',
  BACKENDERROR004: 'FAILED Medicine Service Fn-update',
  BACKENDERROR005: 'FAILED Medicine Service Fn-remove',
  BACKENDERROR006: 'FAILED MedicinePurchase Service Fn-removeExpiredMedicines',
  BACKENDERROR007: 'FAILED MedicinePurchase Service Fn-startCronJob',
  BACKENDERROR008: 'FAILED MedicinePurchase Service Fn-saveUpdated',
  BACKENDERROR009: 'FAILED Medicine Service Fn-bulkAddMedicinesFromExcel',
  BACKENDERROR010: 'Medicine not found',
  BACKENDERROR011: 'Insufficient Medicine quantity available',
  BACKENDERROR012: 'FAILED User Service Fn-create',
  BACKENDERROR013: 'FAILED User Service Fn-findAll',
  BACKENDERROR014: 'FAILED User Service Fn-findOne',
  BACKENDERROR015: 'FAILED User Service Fn-remove',
  BACKENDERROR016: 'FAILED User Service Fn-update',
  BACKENDERROR017: 'User not found',
  BACKENDERROR018: 'FAILED Auth Service Fn-validateUser',
  BACKENDERROR019: 'Invalid user credentials',
  BACKENDERROR020: 'Insufficient role permission',
  BACKENDERROR021: 'User not authenticated',
  BACKENDERROR022: 'Contact number should not be empty',
  BACKENDERROR023: 'Username must be valid email',
  BACKENDERROR024: 'Password must be string',
  BACKENDERROR025: 'Email must be valid email format',
  BACKENDERROR026: 'Role must be valid string value',
  BACKENDERROR027: 'Email is already registered with us',
  BACKENDERROR028: 'Role must not be empty',
  BACKENDERROR029: 'Medicine company must be string',
  BACKENDERROR030: 'Patient age must be string',
  BACKENDERROR031: 'Medicine power must be string',
  BACKENDERROR032: 'Medicine chemicalName must be string',
  BACKENDERROR033: 'Medicine name must be between 1 and 255 characters',
  BACKENDERROR034: 'Medicine Formula must be between 1 and 255 characters',
  BACKENDERROR035: 'Medicine company must be between 1 and 255 characters',
  BACKENDERROR036: 'Minimum Medicine quantity should be 0',
  BACKENDERROR037: 'Medicine power must be between 1 and 100 characters',
  BACKENDERROR038: 'Medicine chemicalName must be between 1 and 255 characters',
  BACKENDERROR039: 'Medicine Price must be a decimal number',
  BACKENDERROR040: 'Username must be between 1 and 50 characters',
  BACKENDERROR041: 'Password must be between 1 and 255 characters',
  BACKENDERROR042: 'Email address must be between 1 and 100 characters',
  BACKENDERROR043: 'Contact number must be String',
  BACKENDERROR044: 'Role must be between 1 and 50 characters',
  BACKENDERROR045: 'Medicine RackNumber must be string',
  BACKENDERROR046: 'Medicine RackNumber must be between 1 and 100 characters',
  BACKENDERROR047: 'FAILED Medicine Service Fn-findByRackNumber',
  BACKENDERROR048: 'FAILED Medicine Service Fn-validateFilePath',
  BACKENDERROR049: 'Invalid file path type',
  BACKENDERROR050: 'FAILED Medicine Service Fn-validateMedicineData',
  BACKENDERROR051: 'FAILED Medicine Service Fn-saveOrUpdateMedicine',
  BACKENDERROR052: 'FAILED Medicine Service Fn-parseExcelFile',
  BACKENDERROR053: 'User ID must not be empty',
  BACKENDERROR054: 'Medicine ID must not be empty',
  BACKENDERROR055: 'Medicine Quantity must be an integer',
  BACKENDERROR056: 'Unit Price of Medicine must be a string value',
  BACKENDERROR057: 'Total Price of Medicine must be a string value',
  BACKENDERROR058: 'Medicine Quantity must be an integer',
  BACKENDERROR059: 'FAILED MedicinePurchase Service Fn-create',
  BACKENDERROR060: 'FAILED MedicinePurchase Service Fn-findAll',
  BACKENDERROR061: 'Purchase record not found',
  BACKENDERROR062: 'FAILED MedicinePurchase Service Fn-findOne',
  BACKENDERROR063: 'FAILED MedicinePurchase Service Fn-remove',
  BACKENDERROR064: 'FAILED MedicinePurchase Service Fn-update',
  BACKENDERROR065: 'FAILED MedicinePurchase Service Fn-createPurchase',
  BACKENDERROR066: 'FAILED MedicinePurchase Service Fn-getExpiringMedicine',
  BACKENDERROR067: 'The ExpiryDate must be a valid ISO 8601 date string',
  BACKENDERROR068: 'The PurchaseDate must be a valid ISO 8601 date string',
  BACKENDERROR069: 'FAILED User Service Fn-FindOneWithUserName',
  BACKENDERROR070: 'Patient name must be string',
  BACKENDERROR071: 'Patient name must be between 1 and 255 characters',
  BACKENDERROR072: 'Mobile number should not be empty',
  BACKENDERROR073: 'Mobile number must be String',
  BACKENDERROR074: 'Patient address must be string',
  BACKENDERROR075: 'Patient address must be between 1 and 255 characters',
  BACKENDERROR076: 'Patient Email address must be valid email format',
  BACKENDERROR077: 'Patient Email address must be between 1 and 100 characters',
  BACKENDERROR078: 'FAILED Patient Service Fn-create',
  BACKENDERROR079: 'Patient not found',
  BACKENDERROR080: 'FAILED Patient Service Fn-findAll',
  BACKENDERROR081: 'FAILED Patient Service Fn-findOne',
  BACKENDERROR082: 'FAILED Patient Service Fn-remove',
  BACKENDERROR083: 'FAILED Patient Service Fn-update',
  BACKENDERROR084: 'Patient age should not be empty',
  BACKENDERROR085: 'Patients gender should be string',
  BACKENDERROR086: 'Patient gender must be between 1 and 50 characters',
  BACKENDERROR087: 'Rack Id should not be empty',
  BACKENDERROR088: 'FAILED Rack Service Fn-create',
  BACKENDERROR089: 'Rack Record Not Found',
  BACKENDERROR090: 'FAILED Rack Service Fn-findAll',
  BACKENDERROR091: 'FAILED Rack Service Fn-findOne',
  BACKENDERROR092: 'FAILED Rack Service Fn-remove',
  BACKENDERROR093: 'FAILED Rack Service Fn-update',
  BACKENDERROR094: 'FAILED MedicineSell Service Fn-create',
  BACKENDERROR095: 'Sell Record Not Found',
  BACKENDERROR096: 'FAILED MedicineSell Service Fn-findAll',
  BACKENDERROR097: 'FAILED MedicineSell Service Fn-findOne',
  BACKENDERROR098: 'FAILED MedicineSell Service Fn-remove',
  BACKENDERROR099: 'FAILED MedicineSell Service Fn-update',
  BACKENDERROR100: 'Medicine Purchase Id should not be empty',
  BACKENDERROR101: 'Medicine Sell quantity should be integer',
  BACKENDERROR102: 'Minimum Medicine sell quantity should be 0',
  BACKENDERROR103: 'Medicine Sell time must be a valid ISO 8601 date string',
  BACKENDERROR104: 'Patient Id should not be empty',
  BACKENDERROR105: 'Medicine Type must not be empty',
  BACKENDERROR106: 'Medicine Type must be valid enum value',
  BACKENDERROR107: 'Mobile number should be 10 digits in length',
  BACKENDERROR108: 'Referred Doctor Name must be string',
  BACKENDERROR109: 'Referred Doctor Name must be between 1 and 255 characters',
  BACKENDERROR110: 'FAILED Medicine Service Fn-handleFileUploadFromUrl',
  BACKENDERROR111: 'FAILED Medicine Service Fn-processCSVFromUrl',
  BACKENDERROR112: 'FAILED Medicine Service Fn-parseCSVFile',
  BACKENDERROR113: 'FAILED Medicine Service Fn-processExcelFromUrl',
  BACKENDERROR114: 'FAILED Medicine Service Fn-getFileTypeFromUrl',
  BACKENDERROR115: 'Unsupported file type',
  BACKENDERROR116: 'Discount In Percentage must be number',
  BACKENDERROR117: 'Patient DOB must be valid valid ISO 8601 date string',
  BACKENDERROR118: 'Patient DOB must not be empty',
};
